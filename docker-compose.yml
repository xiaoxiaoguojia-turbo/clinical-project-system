# ============================================
# 临床创新项目管理系统 - Docker Compose
# 服务编排：Next.js + MongoDB
# ============================================

services:
  # ===== MongoDB 数据库服务 =====
  mongodb:
    image: mongo:7.0
    container_name: clinical-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin_gjx}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-Clinical_2025_admin_hhzn}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-clinical_project_system}
    volumes:
      # 持久化数据存储 - 指定到 D 盘
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      # 初始化脚本（可选）
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - clinical-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  # ===== Next.js 应用服务 =====
  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: clinical-nextjs
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Node环境
      NODE_ENV: production
      
      # Swagger调试（用于排查API文档问题）
      DEBUG_SWAGGER: "true"
      
      # MongoDB连接（内部网络）
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin_gjx}:${MONGO_ROOT_PASSWORD:-Clinical_2025_admin_hhzn}@mongodb:27017/${MONGO_DATABASE:-clinical_project_system}?authSource=admin_gjx
      
      # JWT密钥
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      
      # 文件上传配置
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}
      UPLOAD_DIR: /app/uploads
      
      # 应用配置
      API_BASE_URL: ${API_BASE_URL:-http://localhost:3000}
      NEXT_PUBLIC_APP_NAME: ${NEXT_PUBLIC_APP_NAME:-临床创新项目管理系统}
      NEXT_PUBLIC_APP_VERSION: ${NEXT_PUBLIC_APP_VERSION:-1.0.0}
      
      # Coze AI配置（需要外网）
      COZE_API_KEY: ${COZE_API_KEY:-}
      COZE_BOT_ID: ${COZE_BOT_ID:-}
      COZE_WORKFLOW_ID: ${COZE_WORKFLOW_ID:-}
    volumes:
      # 文件上传持久化
      - uploads_data:/app/uploads
      # 日志持久化（可选）
      - ./logs:/app/logs
    networks:
      - clinical-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# ===== 网络配置 =====
networks:
  clinical-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ===== 数据卷配置 - 指定到 D 盘 =====
volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: 'D:\Docker\clinical_data\mongodb_data'
    name: clinical_mongodb_data
  
  mongodb_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: 'D:\Docker\clinical_data\mongodb_config'
    name: clinical_mongodb_config
  
  uploads_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: 'D:\Docker\clinical_data\uploads'
    name: clinical_uploads_data